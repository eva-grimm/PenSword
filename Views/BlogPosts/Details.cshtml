@model BlogPost
@inject UserManager<BlogUser> _UserManager
@inject IImageService _ImageService
@inject IBlogService _BlogService
@inject IUserService _UserService
@inject IRoleService _RoleService

@{
    ViewData["Title"] = "Details";
    bool isLiked = await _UserService.DoesUserLikeBlogAsync(Model.Id, _UserManager.GetUserId(User)!);
    int count = Model.Likes.Count();
    BlogUser? currentUser = await _UserManager.GetUserAsync(User);
}
<!-- Start Post Single Wrapper  -->
<div class="post-single-wrapper axil-section-gap bg-color-white">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 offset-lg-2">
                <!-- Start Banner Area -->
                <partial name="_AuthorHeaderPartial" model="@Model" />
                <!-- End Banner Area -->
                <!-- Start Blog Details  -->
                <div class="axil-post-details">
                    <p class="has-medium-font-size">
                        @Model.Abstract
                    </p>
                    <figure class="wp-block-image alignwide text-center">
                        <img src="@_ImageService.ConvertByteArrayToFile(Model.ImageData, Model.ImageType, DefaultImage.BlogPostImage)"
                             alt="Blog Image" />
                    </figure>
                    @Html.Raw(Model.Content)
                    <div class="tagcloud">
                        @foreach (Tag tag in Model.Tags)
                        {
                            <a asp-action="FilterByTag" asp-route-id="@tag.Id">@tag.Name</a>
                        }
                    </div>
                    <div class="social-share-block">
                        <div class="post-like">
                            <a id="likesButton">
                                @if (isLiked)
                                {
                                    <i id="faThumb" class="fal fa-thumbs-up"
                                       style="background-color:#f5978f;color:white;border-color:white"></i>
                                }
                                else
                                {
                                    <i id="faThumb" class="fal fa-thumbs-up"></i>
                                }
                                <span id="numLikes">@count Likes</span>
                            </a>
                        </div>
                    </div>
                    <!-- Start Author  -->
                    <partial name="_AuthorAreaPartial" model="Model.Author" />
                    <!-- End Author  -->
                    <!-- Start Comment Form Area  -->
                    <div class="axil-comment-area">
                        <!-- Start Comment Respond  -->
                        @if (User.Identity!.IsAuthenticated)
                        {
                            <div class="comment-respond">
                                <form asp-action="Create" asp-controller="Comments">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <input type="hidden" name="BlogPostId" value="@Model.Id" class="form-control" />
                                    <input type="hidden" name="slug" value="@Model.Slug" class="form-control" />
                                    <div class="row row-md-10">
                                        <div class="col-12">
                                            <div class="form-group">
                                                <h4 class="title"><label for="content">Leave a Reply</label></h4>
                                                <textarea id="content" class="form-control" name="Body"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="form-submit cerchio">
                                            <input name="submit" type="submit" id="submit" class="axil-button button-rounded" value="Post Comment">
                                        </div>
                                    </div>
                                </form>
                            </div>
                        }
                        else
                        {
                            <div class="axil-total-comment-post">
                                <div class="add-comment-button cerchio">
                                    <a class="axil-button button-rounded"
                                       asp-area="Identity"
                                       asp-page="/Account/Login"
                                       asp-route-returnUrl="@Url.Action("Details", "BlogPosts", new { id = Model.Id })" tabindex="0">
                                        <span>Login to Add Your Comment</span>
                                    </a>
                                </div>
                            </div>
                        }
                        <!-- End Comment Respond  -->
                        <!-- Start Comment Area  -->
                        <div class="axil-comment-area">
                            <h4 class="title">@Model.Comments.Count() Comments</h4>
                            <ul class="comment-list">
                                @foreach (Comment comment in Model.Comments)
                                {
                                    <!-- Start Single Comment  -->
                                    <li class="comment">
                                        <div class="comment-body">
                                            <div class="single-comment">
                                                <div class="comment-img">
                                                    <img src="@_ImageService.ConvertByteArrayToFile(comment.Author!.ImageData, comment.Author.ImageType, DefaultImage.AuthorImage)"
                                                         alt="Author Image" style="height:40px;width:40px">
                                                </div>
                                                <div class="comment-inner">
                                                    <h6 class="commenter">
                                                        <a class="hover-flip-item-wrapper" href="#">
                                                            <span class="hover-flip-item">
                                                                <span data-text="@comment.Author?.FullName">@comment.Author?.FullName</span>
                                                            </span>
                                                        </a>
                                                    </h6>
                                                    <div class="comment-meta">
                                                        <div class="time-spent">@comment.Created.ToString("MMM dd, yyyy")</div>
                                                        <div class="reply-edit">
                                                        </div>
                                                    </div>
                                                    <div class="comment-text">
                                                        <p class="b2">
                                                            @Html.Raw(comment.Body)
                                                        </p>
                                                    </div>
                                                    @if (await _RoleService.IsUserInRoleAsync(currentUser?.Id, nameof(Roles.Admin))
                                                   || await _RoleService.IsUserInRoleAsync(currentUser?.Id, nameof(Roles.Moderator))
                                                   || comment.AuthorId == currentUser?.Id)
                                                    {
                                                        <div>
                                                            <a asp-action="Edit" asp-controller="Comments" asp-route-id="@comment.Id">
                                                                <i class="bi bi-pencil-fill"></i> Edit
                                                            </a>
                                                            <a asp-action="Delete" asp-controller="Comments" asp-route-id="@comment.Id" class="ms-3">
                                                                <i class="bi bi-trash-fill"></i> Delete
                                                            </a>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                    <!-- End Single Comment  -->
                                }
                            </ul>
                        </div>
                        <!-- End Comment Area  -->
                    </div>
                    <!-- End Comment Form Area  -->
                </div>
                <!-- End Blog Details  -->
            </div>
        </div>
    </div>
</div>
<!-- End Post Single Wrapper  -->
@section scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <!--Sweet Alerts-->
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let message = '@(ViewBag.SwalMessage)';
        if (!message.includes("Error") && message != '') {
            Swal.fire({
                backdrop: false,
                icon: 'success',
                title: message,
                showConfirmButton: true
            });
        } else if (message.includes("Error")) {
            Swal.fire({
                backdrop: false,
                icon: 'error',
                title: 'Oops...',
                text: message
            });
        }
    </script>

    <!--Handle Like Button Clicks-->
    <script type="text/javascript">
        @{
            string userId = _UserManager.GetUserId(User)!;
        }
            let userId = '@userId';
        $('#likesButton').click(function () {
            // If not logged in
            if (userId == '') {
                Swal.fire({
                    backdrop: false,
                    icon: 'warning',
                    title: 'Oops...',
                    text: 'You must be logged in to Like this post.'
                });
            } else {
                let args = {
                    blogPostId: @Model.Id,
                    blogUserId: userId
                };

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("LikeBlogPost","BlogPosts")',
                    data: args,
                    success: function (result) {
                        let data = result.isLiked;
                        let likes = result.count;

                        if (data == true) {
                            $("#faThumb").css({ "background-color": "#f5978f", "color": "white", "border-color": "white" });
                        } else {
                            $("#faThumb").css({ "background-color": "", "color": "", "border-color": "" });
                        }

                        $('#numLikes').html(likes + ' Likes');
                    },
                    failure: function (result) {
                        alert(result.d);
                    },
                    error: function (result) {
                        alert(result.d);
                    }
                });
            }
        });
    </script>

    <!-- Tiny Docs Script -->
    <script>
        tinymce.init({
            selector: 'textarea#content',
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image imageupload media table mergetags | align lineheight | tinycomments | checklist numlist bullist indent outdent | emoticons charmap codesample | removeformat |',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            codesample_languages: [
                { text: 'HTML/XML', value: 'markup' },
                { text: 'JavaScript', value: 'javascript' },
                { text: 'CSS', value: 'css' },
                { text: 'C#', value: 'csharp' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
        });
    </script>
}