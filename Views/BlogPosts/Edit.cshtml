@model BlogPost
@inject IImageService _ImageService;
@inject IBlogService _BlogService;

@{
    string blogTitle = Model.Title ?? "Untitled Blog";
    ViewData["Title"] = $"Editing Post {blogTitle}";
}

<style>
    .ck-editor__editable_inline {
        min-height: 600px;
    }

    input.largerCheckbox {
        width: 30px;
        height: 30px;
    }

    label.form-check-label {
        font-size: 22px;
    }
</style>
<div class="post-single-wrapper axil-section-gap bg-color-white">
    <div class="container">
        <h1>Editing Post</h1>
        <h4>@blogTitle</h4>
    </div>
    <hr />
    <main class="container mt-5">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Created" />
            <input type="hidden" asp-for="ImageData" />
            <input type="hidden" asp-for="ImageType" />
            <input type="hidden" asp-for="Slug" />
            <div class="row">
                <div class="col-12 col-lg-4">
                    <div class="form-group">
                        <label asp-for="ImageFile" class="control-label">Blog Post Image</label>
                        <img id="blogImage" class="img-fluid border rounded-3 mb-2" style="max-height: 350px;"
                             src="@_ImageService.ConvertByteArrayToFile(Model?.ImageData!,Model?.ImageType!, DefaultImage.BlogPostImage)">
                        <input asp-for="ImageFile" type="file" class="form-control mt-3 pt-2" accept=".png,.jpg,.jpeg,.gif"
                               onchange="document.getElementById('blogImage').src = window.URL.createObjectURL(this.files[0])" />
                    </div>
                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Abstract" class="control-label"></label>
                        <textarea asp-for="Abstract" class="form-control" rows="1"></textarea>
                        <span asp-validation-for="Abstract" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="CategoryId" class="control-label">Category</label>
                        <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryList"></select>
                    </div>
                </div>
                <div class="col-12 col-lg-8">
                    <div class="form-group">
                        <label asp-for="Content" class="control-label"></label>
                        <textarea asp-for="Content" class="editor form-control"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="tagContainer">
                        <label for="tagInput"></label>
                        <input class="form-control" type="text" id="tagInput" name="StringTags" autocomplete="off" />
                        <div class="tagcloud axil-single-widget mt-2" style="display:none">
                            <!-- tags go here -->
                            @foreach (Tag tag in await _BlogService.GetTagsAsync())
                            {
                                <a>@tag.Name</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group d-flex justify-content-end">
                <label class="form-check-label me-4 mt-2" asp-for="IsDeleted">Delete?</label>
                <input class="largerCheckbox me-8" type="checkbox" asp-for="IsDeleted" />
                <span asp-validation-for="IsDeleted" class="text-danger"></span>
            </div>
            <div class="form-group d-flex justify-content-end">
                <label class="form-check-label me-4 mt-2" asp-for="IsPublished">Publish?</label>
                <input class="largerCheckbox me-8" type="checkbox" asp-for="IsPublished" />
                <span asp-validation-for="IsPublished" class="text-danger"></span>
            </div>
            <div class="form-group d-flex justify-content-end">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
        <div class="form-group mt-5 start-0">
            <a asp-action="Index">Back</a>
        </div>
    </main>
</div>

@* <form asp-action="Edit" method="post" class="row" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="Created" />
    <input type="hidden" asp-for="ImageData" />
    <input type="hidden" asp-for="ImageType" />
    <input type="hidden" asp-for="Slug" />
    <div id="blogDiv" class="col-12 col-md-8">
        <div class="form-group">
            <label asp-for="Title" class="control-label"></label>
            <input asp-for="Title" class="form-control" placeholder="Title" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="form-group mt-3">
            <label asp-for="Abstract" class="control-label"></label>
            <textarea asp-for="Abstract" class="form-control" rows="5"
                      placeholder="Say it in brief..."></textarea>
            <span asp-validation-for="Abstract" class="text-danger"></span>
        </div>
        <div class="form-group mt-3">
            <label asp-for="Content" class="control-label"></label>
            <textarea asp-for="Content" class="form-control" rows="15"
                      placeholder="What do you have to say...?"></textarea>
            <span asp-validation-for="Content" class="text-danger"></span>
        </div>
    </div>
    <div id="blogAttributesDiv" class="col-md-4">
        <div class="form-group mt-3 mt-md-0">
            <label asp-for="CategoryId" class="control-label"></label>
            <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryList">
                <option></option>
            </select>
        </div>
        <div class="form-group">
            <label asp-for="Tags" class="control-label"></label>
            <select asp-for="Tags" class="form-control" asp-items="ViewBag.TagList">
                <option></option>
            </select>
        </div>
        <div class="form-group form-check">
            <label class="form-check-label me-5">
                <input class="form-check-input" asp-for="IsPublished" /> Publish?
            </label>
            <label class="form-check-label">
                <input class="form-check-input" asp-for="IsDeleted" /> Delete?
            </label>
        </div>
        <div id="blogImageDiv" class="square-img-container mt-3">
            <img id="blogImage" class="square-img"
                 src="@_ImageService.ConvertByteArrayToFile(Model.ImageData,Model.ImageType!,DefaultImage.BlogPostImage))" />
        </div>
        <div class="form-group mt-3">
            <label asp-for="ImageFile" class="control-label">Cover Image?</label>
            <input asp-for="ImageFile" id="userFile" class="form-control" accept=".png,.jpg,.jpeg,.gif"
                   onchange="userFileInput()" />
            <span asp-validation-for="ImageFile" class="text-danger"></span>
        </div>
        <div class="form-group mt-3">
            <input type="submit" value="Edit" class="btn btn-primary" />
        </div>
        <div class=" mt-3">
            <a asp-action="Index">Back to List</a>
        </div>
    </div>
</form> *@


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <!--CK Editor-->
    <script src="https://cdn.ckeditor.com/ckeditor5/35.0.1/super-build/ckeditor.js"></script>
    <script>
        CKEDITOR.ClassicEditor.create(document.querySelector('.editor'), {
            toolbar: {
                items: [
                    'findAndReplace', 'selectAll', '|',
                    'heading', '|',
                    'bold', 'italic', 'strikethrough', 'underline', 'code', 'subscript', 'superscript', 'removeFormat', '|',
                    'bulletedList', 'numberedList', 'todoList', '|',
                    'outdent', 'indent', '|',
                    'undo', 'redo',
                    '-',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'highlight', '|',
                    'alignment', '|',
                    'link', 'insertImage', 'blockQuote', 'insertTable', 'mediaEmbed', 'codeBlock', 'htmlEmbed', '|',
                    'specialCharacters', 'horizontalLine', 'pageBreak', '|',
                ],
                shouldNotGroupWhenFull: true
            },
            list: {
                properties: {
                    styles: true,
                    startIndex: true,
                    reversed: true
                }
            },
            heading: {
                options: [
                    { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                    { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                    { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                    { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
                    { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
                    { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
                    { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }
                ]
            },
            fontFamily: {
                options: [
                    'default',
                    'Arial, Helvetica, sans-serif',
                    'Courier New, Courier, monospace',
                    'Georgia, serif',
                    'Lucida Sans Unicode, Lucida Grande, sans-serif',
                    'Tahoma, Geneva, sans-serif',
                    'Times New Roman, Times, serif',
                    'Trebuchet MS, Helvetica, sans-serif',
                    'Verdana, Geneva, sans-serif'
                ],
                supportAllValues: true
            },
            fontSize: {
                options: [10, 12, 14, 'default', 18, 20, 22],
                supportAllValues: true
            },
            htmlSupport: {
                allow: [
                    {
                        name: /.*/,
                        attributes: true,
                        classes: true,
                        styles: true
                    }
                ]
            },
            htmlEmbed: {
                showPreviews: true
            },
            link: {
                decorators: {
                    addTargetToExternalLinks: true,
                    defaultProtocol: 'https://',

                }
            },
            removePlugins: [
                'CKBox',
                'CKFinder',
                'RealTimeCollaborativeComments',
                'RealTimeCollaborativeTrackChanges',
                'RealTimeCollaborativeRevisionHistory',
                'PresenceList',
                'Comments',
                'TrackChanges',
                'TrackChangesData',
                'RevisionHistory',
                'Pagination',
                'WProofreader',
            ]
        });
    </script>

    <script>
        // override the jQuery ":contains" selector to make it case insensitive
        jQuery.expr[':'].contains = function (a, i, m) {
            return $(a).text().toUpperCase()
                .indexOf(m[3].toUpperCase()) >= 0;
        };

        $(document).ready(function () {
            // show tagcloud when focused on tagInput
            $('#tagInput').focus(function () {
                $('.tagcloud').show(300);
            });
            // hide when not
            $('form *:not("#tagInput")').focus(function () {
                if ($('.tagcloud').is(':visible')) {
                    $('.tagcloud').hide(300);
                }
            });

            $('#tagInput').keyup(function () {
                // get just the text from the input after the last comma
                let inputTags = $(this).val().split(',');
                let searchString = inputTags.pop().trim();

                // hide all the tags which do not contain that text
                $(`.tagcloud > a:not( :contains(${searchString}))`).hide();

                // show those that do
                $(`.tagcloud > a:contains(${searchString})`).show();

                // disable tags already selected
                $('.disabledTag').removeClass('disabledTag');
                inputTags.forEach(tag => {
                    if (tag.trim() == '') return;

                    let matchingTag = $(`.tagcloud > a:contains(${tag.trim()})`);
                    if (matchingTag.text().trim().toLowerCase() == tag.trim().toLowerCase()) {
                        matchingTag.addClass('disabledTag');
                    };
                });
            });

            $('.tagcloud > a').click(function () {
                // if disabled, then do nothung further
                if ($(this).hasClass('disabledTag')) {
                    $('#tagInput').focus();
                    return;
                }

                // name of clicked tag and text in tagInput
                let tagName = $(this).text();
                let tags = $('#tagInput').val().split(',');

                tags.pop();
                tags.push(tagName);

                // return result to tagInput
                let tagsAsString = tags.map(t => t.trim()).join(', ') + ', ';
                $('#tagInput').val(tagsAsString);

                $('#tagInput').focus();
                // trigger keyup function above, so all tags always shown after selection
                $('#tagInput').keyup();
            })
        })
    </script>
}